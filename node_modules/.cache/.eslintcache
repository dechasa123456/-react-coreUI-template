[{"/home/npm/Downloads/coreui/src/index.js":"1","/home/npm/Downloads/coreui/src/store.js":"2","/home/npm/Downloads/coreui/src/App.js":"3","/home/npm/Downloads/coreui/src/polyfill.js":"4","/home/npm/Downloads/coreui/src/serviceWorker.js":"5","/home/npm/Downloads/coreui/src/assets/icons/index.js":"6","/home/npm/Downloads/coreui/src/containers/TheLayout.js":"7","/home/npm/Downloads/coreui/src/views/pages/register/Register.js":"8","/home/npm/Downloads/coreui/src/views/pages/page404/Page404.js":"9","/home/npm/Downloads/coreui/src/views/pages/page500/Page500.js":"10","/home/npm/Downloads/coreui/src/views/pages/login/Login.js":"11","/home/npm/Downloads/coreui/src/assets/icons/logo-negative.js":"12","/home/npm/Downloads/coreui/src/assets/icons/logo.js":"13","/home/npm/Downloads/coreui/src/assets/icons/sygnet.js":"14","/home/npm/Downloads/coreui/src/containers/index.js":"15","/home/npm/Downloads/coreui/src/containers/TheSidebar.js":"16","/home/npm/Downloads/coreui/src/containers/TheHeaderDropdownTasks.js":"17","/home/npm/Downloads/coreui/src/containers/TheHeader.js":"18","/home/npm/Downloads/coreui/src/containers/TheHeaderDropdownNotif.js":"19","/home/npm/Downloads/coreui/src/containers/TheHeaderDropdown.js":"20","/home/npm/Downloads/coreui/src/containers/TheFooter.js":"21","/home/npm/Downloads/coreui/src/containers/TheHeaderDropdownMssg.js":"22","/home/npm/Downloads/coreui/src/containers/TheContent.js":"23","/home/npm/Downloads/coreui/src/containers/_nav.js":"24","/home/npm/Downloads/coreui/src/routes.js":"25","/home/npm/Downloads/coreui/src/views/users/User.js":"26","/home/npm/Downloads/coreui/src/views/users/Users.js":"27","/home/npm/Downloads/coreui/src/views/widgets/Widgets.js":"28","/home/npm/Downloads/coreui/src/views/users/UsersData.js":"29","/home/npm/Downloads/coreui/src/views/dashboard/Dashboard.js":"30","/home/npm/Downloads/coreui/src/views/theme/colors/Colors.js":"31","/home/npm/Downloads/coreui/src/views/notifications/alerts/Alerts.js":"32","/home/npm/Downloads/coreui/src/views/notifications/badges/Badges.js":"33","/home/npm/Downloads/coreui/src/views/notifications/modals/Modals.js":"34","/home/npm/Downloads/coreui/src/views/icons/brands/Brands.js":"35","/home/npm/Downloads/coreui/src/views/icons/flags/Flags.js":"36","/home/npm/Downloads/coreui/src/views/icons/coreui-icons/CoreUIIcons.js":"37","/home/npm/Downloads/coreui/src/views/theme/typography/Typography.js":"38","/home/npm/Downloads/coreui/src/views/charts/Charts.js":"39","/home/npm/Downloads/coreui/src/views/notifications/toaster/Toaster.js":"40","/home/npm/Downloads/coreui/src/views/buttons/button-groups/ButtonGroups.js":"41","/home/npm/Downloads/coreui/src/views/buttons/button-dropdowns/ButtonDropdowns.js":"42","/home/npm/Downloads/coreui/src/views/base/tooltips/Tooltips.js":"43","/home/npm/Downloads/coreui/src/views/base/switches/Switches.js":"44","/home/npm/Downloads/coreui/src/views/base/progress-bar/ProgressBar.js":"45","/home/npm/Downloads/coreui/src/views/buttons/buttons/Buttons.js":"46","/home/npm/Downloads/coreui/src/views/buttons/brand-buttons/BrandButtons.js":"47","/home/npm/Downloads/coreui/src/views/base/popovers/Popovers.js":"48","/home/npm/Downloads/coreui/src/views/base/paginations/Pagnations.js":"49","/home/npm/Downloads/coreui/src/views/base/jumbotrons/Jumbotrons.js":"50","/home/npm/Downloads/coreui/src/views/base/navbars/Navbars.js":"51","/home/npm/Downloads/coreui/src/views/base/navs/Navs.js":"52","/home/npm/Downloads/coreui/src/views/base/list-groups/ListGroups.js":"53","/home/npm/Downloads/coreui/src/views/base/collapses/Collapses.js":"54","/home/npm/Downloads/coreui/src/views/base/carousels/Carousels.js":"55","/home/npm/Downloads/coreui/src/views/base/breadcrumbs/Breadcrumbs.js":"56","/home/npm/Downloads/coreui/src/views/base/cards/Cards.js":"57","/home/npm/Downloads/coreui/src/views/base/tabs/Tabs.js":"58","/home/npm/Downloads/coreui/src/views/base/tables/Tables.js":"59","/home/npm/Downloads/coreui/src/views/base/forms/BasicForms.js":"60","/home/npm/Downloads/coreui/src/views/widgets/WidgetsBrand.js":"61","/home/npm/Downloads/coreui/src/views/widgets/WidgetsDropdown.js":"62","/home/npm/Downloads/coreui/src/views/charts/MainChartExample.js":"63","/home/npm/Downloads/coreui/src/views/charts/ChartBarSimple.js":"64","/home/npm/Downloads/coreui/src/views/charts/ChartLineSimple.js":"65","/home/npm/Downloads/coreui/src/reusable/index.js":"66","/home/npm/Downloads/coreui/src/reusable/DocsLink.js":"67","/home/npm/Desktop/latest/temp/src/index.js":"68","/home/npm/Desktop/latest/temp/src/store.js":"69","/home/npm/Desktop/latest/temp/src/serviceWorker.js":"70","/home/npm/Desktop/latest/temp/src/App.js":"71","/home/npm/Desktop/latest/temp/src/polyfill.js":"72","/home/npm/Desktop/latest/temp/src/assets/icons/index.js":"73","/home/npm/Desktop/latest/temp/src/views/Login.js":"74","/home/npm/Desktop/latest/temp/src/containers/TheLayout.js":"75","/home/npm/Desktop/latest/temp/src/assets/icons/logo-negative.js":"76","/home/npm/Desktop/latest/temp/src/assets/icons/logo.js":"77","/home/npm/Desktop/latest/temp/src/assets/icons/sygnet.js":"78","/home/npm/Desktop/latest/temp/src/containers/index.js":"79","/home/npm/Desktop/latest/temp/src/containers/TheHeader.js":"80","/home/npm/Desktop/latest/temp/src/containers/TheSidebar.js":"81","/home/npm/Desktop/latest/temp/src/containers/TheFooter.js":"82","/home/npm/Desktop/latest/temp/src/containers/TheHeaderDropdown.js":"83","/home/npm/Desktop/latest/temp/src/containers/TheContent.js":"84","/home/npm/Desktop/latest/temp/src/containers/TheHeaderDropdownMssg.js":"85","/home/npm/Desktop/latest/temp/src/containers/_nav.js":"86","/home/npm/Desktop/latest/temp/src/routes.js":"87","/home/npm/Desktop/latest/temp/src/views/User.js":"88","/home/npm/Desktop/latest/temp/src/views/SettingDistrict.js":"89","/home/npm/Desktop/latest/temp/src/views/SettingLanguage.js":"90","/home/npm/Desktop/latest/temp/src/views/SettingRegion.js":"91","/home/npm/Desktop/latest/temp/src/views/SettingInstitute.js":"92","/home/npm/Desktop/latest/temp/src/views/AddVacancy.js":"93","/home/npm/Desktop/latest/temp/src/views/ClosedVacancy.js":"94","/home/npm/Desktop/latest/temp/src/views/Dashboard.js":"95","/home/npm/Desktop/latest/temp/src/views/Appliers.js":"96","/home/npm/Desktop/latest/temp/src/views/NewVacancy.js":"97","/home/npm/Desktop/latest/temp/src/views/users/UsersData.js":"98","/home/npm/Desktop/latest/temp/src/views/charts/ChartLineSimple.js":"99"},{"size":735,"mtime":1629834944000,"results":"100","hashOfConfig":"101"},{"size":324,"mtime":1629834944000,"results":"102","hashOfConfig":"101"},{"size":1387,"mtime":1629834944000,"results":"103","hashOfConfig":"101"},{"size":1895,"mtime":1629834944000,"results":"104","hashOfConfig":"101"},{"size":4686,"mtime":1629834944000,"results":"105","hashOfConfig":"101"},{"size":3813,"mtime":1629834944000,"results":"106","hashOfConfig":"101"},{"size":413,"mtime":1629834944000,"results":"107","hashOfConfig":"101"},{"size":2864,"mtime":1629834944000,"results":"108","hashOfConfig":"101"},{"size":1294,"mtime":1629834944000,"results":"109","hashOfConfig":"101"},{"size":1313,"mtime":1629834944000,"results":"110","hashOfConfig":"101"},{"size":2762,"mtime":1629834944000,"results":"111","hashOfConfig":"101"},{"size":6933,"mtime":1629834944000,"results":"112","hashOfConfig":"101"},{"size":6920,"mtime":1629834944000,"results":"113","hashOfConfig":"101"},{"size":978,"mtime":1629834944000,"results":"114","hashOfConfig":"101"},{"size":596,"mtime":1629834944000,"results":"115","hashOfConfig":"101"},{"size":1319,"mtime":1629834944000,"results":"116","hashOfConfig":"101"},{"size":2253,"mtime":1629834944000,"results":"117","hashOfConfig":"101"},{"size":2848,"mtime":1629834944000,"results":"118","hashOfConfig":"101"},{"size":2543,"mtime":1629834944000,"results":"119","hashOfConfig":"101"},{"size":2688,"mtime":1629834944000,"results":"120","hashOfConfig":"101"},{"size":569,"mtime":1629834944000,"results":"121","hashOfConfig":"101"},{"size":4788,"mtime":1629834944000,"results":"122","hashOfConfig":"101"},{"size":1095,"mtime":1629834944000,"results":"123","hashOfConfig":"101"},{"size":5992,"mtime":1629834944000,"results":"124","hashOfConfig":"101"},{"size":5535,"mtime":1629834944000,"results":"125","hashOfConfig":"101"},{"size":1200,"mtime":1629834944000,"results":"126","hashOfConfig":"101"},{"size":2132,"mtime":1629834944000,"results":"127","hashOfConfig":"101"},{"size":12301,"mtime":1629834944000,"results":"128","hashOfConfig":"101"},{"size":2442,"mtime":1629834944000,"results":"129","hashOfConfig":"101"},{"size":23856,"mtime":1629834944000,"results":"130","hashOfConfig":"101"},{"size":3685,"mtime":1629834944000,"results":"131","hashOfConfig":"101"},{"size":5910,"mtime":1629834944000,"results":"132","hashOfConfig":"101"},{"size":3605,"mtime":1629834944000,"results":"133","hashOfConfig":"101"},{"size":10997,"mtime":1629834944000,"results":"134","hashOfConfig":"101"},{"size":963,"mtime":1629834944000,"results":"135","hashOfConfig":"101"},{"size":590,"mtime":1629834944000,"results":"136","hashOfConfig":"101"},{"size":606,"mtime":1629834944000,"results":"137","hashOfConfig":"101"},{"size":7000,"mtime":1629834944000,"results":"138","hashOfConfig":"101"},{"size":5779,"mtime":1629834944000,"results":"139","hashOfConfig":"101"},{"size":5328,"mtime":1629834944000,"results":"140","hashOfConfig":"101"},{"size":6169,"mtime":1629834944000,"results":"141","hashOfConfig":"101"},{"size":16489,"mtime":1629834944000,"results":"142","hashOfConfig":"101"},{"size":2717,"mtime":1629834944000,"results":"143","hashOfConfig":"101"},{"size":24660,"mtime":1629834944000,"results":"144","hashOfConfig":"101"},{"size":2970,"mtime":1629834944000,"results":"145","hashOfConfig":"101"},{"size":33216,"mtime":1629834944000,"results":"146","hashOfConfig":"101"},{"size":15401,"mtime":1629834944000,"results":"147","hashOfConfig":"101"},{"size":2910,"mtime":1629834944000,"results":"148","hashOfConfig":"101"},{"size":2166,"mtime":1629834944000,"results":"149","hashOfConfig":"101"},{"size":2080,"mtime":1629834944000,"results":"150","hashOfConfig":"101"},{"size":5774,"mtime":1629834944000,"results":"151","hashOfConfig":"101"},{"size":9425,"mtime":1629834944000,"results":"152","hashOfConfig":"101"},{"size":12862,"mtime":1629834944000,"results":"153","hashOfConfig":"101"},{"size":9261,"mtime":1629834944000,"results":"154","hashOfConfig":"101"},{"size":6876,"mtime":1629834944000,"results":"155","hashOfConfig":"101"},{"size":1727,"mtime":1629834944000,"results":"156","hashOfConfig":"101"},{"size":18183,"mtime":1629834944000,"results":"157","hashOfConfig":"101"},{"size":5618,"mtime":1629834944000,"results":"158","hashOfConfig":"101"},{"size":5048,"mtime":1629834944000,"results":"159","hashOfConfig":"101"},{"size":51528,"mtime":1629834944000,"results":"160","hashOfConfig":"101"},{"size":4031,"mtime":1629834944000,"results":"161","hashOfConfig":"101"},{"size":4776,"mtime":1629834944000,"results":"162","hashOfConfig":"101"},{"size":2486,"mtime":1629834944000,"results":"163","hashOfConfig":"101"},{"size":1545,"mtime":1629834944000,"results":"164","hashOfConfig":"101"},{"size":3294,"mtime":1629834944000,"results":"165","hashOfConfig":"101"},{"size":56,"mtime":1629834944000,"results":"166","hashOfConfig":"101"},{"size":581,"mtime":1629834944000,"results":"167","hashOfConfig":"101"},{"size":879,"mtime":1638618386031,"results":"168","hashOfConfig":"169"},{"size":324,"mtime":1629834944000,"results":"170","hashOfConfig":"169"},{"size":4686,"mtime":1629834944000,"results":"171","hashOfConfig":"169"},{"size":832,"mtime":1636442380869,"results":"172","hashOfConfig":"169"},{"size":1895,"mtime":1629834944000,"results":"173","hashOfConfig":"169"},{"size":3813,"mtime":1629834944000,"results":"174","hashOfConfig":"169"},{"size":2354,"mtime":1638738207410,"results":"175","hashOfConfig":"169"},{"size":413,"mtime":1629834944000,"results":"176","hashOfConfig":"169"},{"size":6932,"mtime":1636443283632,"results":"177","hashOfConfig":"169"},{"size":6920,"mtime":1629834944000,"results":"178","hashOfConfig":"169"},{"size":978,"mtime":1629834944000,"results":"179","hashOfConfig":"169"},{"size":420,"mtime":1636395701129,"results":"180","hashOfConfig":"169"},{"size":1880,"mtime":1638776651560,"results":"181","hashOfConfig":"169"},{"size":1541,"mtime":1638776157804,"results":"182","hashOfConfig":"169"},{"size":563,"mtime":1636445187801,"results":"183","hashOfConfig":"169"},{"size":1256,"mtime":1638738407552,"results":"184","hashOfConfig":"169"},{"size":1086,"mtime":1636398445529,"results":"185","hashOfConfig":"169"},{"size":2634,"mtime":1638737966057,"results":"186","hashOfConfig":"169"},{"size":1450,"mtime":1636727545285,"results":"187","hashOfConfig":"169"},{"size":1565,"mtime":1638627596104,"results":"188","hashOfConfig":"169"},{"size":1885,"mtime":1636714630587,"results":"189","hashOfConfig":"169"},{"size":5514,"mtime":1636723967696,"results":"190","hashOfConfig":"169"},{"size":5513,"mtime":1636723695901,"results":"191","hashOfConfig":"169"},{"size":5390,"mtime":1636723366434,"results":"192","hashOfConfig":"169"},{"size":5482,"mtime":1636723806227,"results":"193","hashOfConfig":"169"},{"size":7810,"mtime":1638642083303,"results":"194","hashOfConfig":"169"},{"size":1596,"mtime":1636727337360,"results":"195","hashOfConfig":"169"},{"size":4296,"mtime":1636449444056,"results":"196","hashOfConfig":"169"},{"size":5487,"mtime":1638768335517,"results":"197","hashOfConfig":"169"},{"size":2049,"mtime":1638627856956,"results":"198","hashOfConfig":"169"},{"size":2642,"mtime":1636721581900,"results":"199","hashOfConfig":"169"},{"size":3294,"mtime":1629834944000,"results":"200","hashOfConfig":"169"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jwmsti",{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},"1ucteqd",{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"337"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"337"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"337"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"337"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"337"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"337"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"337"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"337"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"337"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"337"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"337"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"337"},"/home/npm/Downloads/coreui/src/index.js",[],"/home/npm/Downloads/coreui/src/store.js",[],"/home/npm/Downloads/coreui/src/App.js",[],"/home/npm/Downloads/coreui/src/polyfill.js",[],"/home/npm/Downloads/coreui/src/serviceWorker.js",[],"/home/npm/Downloads/coreui/src/assets/icons/index.js",[],"/home/npm/Downloads/coreui/src/containers/TheLayout.js",[],"/home/npm/Downloads/coreui/src/views/pages/register/Register.js",[],"/home/npm/Downloads/coreui/src/views/pages/page404/Page404.js",[],"/home/npm/Downloads/coreui/src/views/pages/page500/Page500.js",[],"/home/npm/Downloads/coreui/src/views/pages/login/Login.js",[],"/home/npm/Downloads/coreui/src/assets/icons/logo-negative.js",[],"/home/npm/Downloads/coreui/src/assets/icons/logo.js",[],"/home/npm/Downloads/coreui/src/assets/icons/sygnet.js",[],"/home/npm/Downloads/coreui/src/containers/index.js",[],"/home/npm/Downloads/coreui/src/containers/TheSidebar.js",[],"/home/npm/Downloads/coreui/src/containers/TheHeaderDropdownTasks.js",[],"/home/npm/Downloads/coreui/src/containers/TheHeader.js",[],"/home/npm/Downloads/coreui/src/containers/TheHeaderDropdownNotif.js",[],"/home/npm/Downloads/coreui/src/containers/TheHeaderDropdown.js",[],"/home/npm/Downloads/coreui/src/containers/TheFooter.js",[],"/home/npm/Downloads/coreui/src/containers/TheHeaderDropdownMssg.js",[],"/home/npm/Downloads/coreui/src/containers/TheContent.js",[],"/home/npm/Downloads/coreui/src/containers/_nav.js",[],"/home/npm/Downloads/coreui/src/routes.js",[],"/home/npm/Downloads/coreui/src/views/users/User.js",[],"/home/npm/Downloads/coreui/src/views/users/Users.js",[],"/home/npm/Downloads/coreui/src/views/widgets/Widgets.js",[],"/home/npm/Downloads/coreui/src/views/users/UsersData.js",[],"/home/npm/Downloads/coreui/src/views/dashboard/Dashboard.js",[],"/home/npm/Downloads/coreui/src/views/theme/colors/Colors.js",[],"/home/npm/Downloads/coreui/src/views/notifications/alerts/Alerts.js",[],"/home/npm/Downloads/coreui/src/views/notifications/badges/Badges.js",[],"/home/npm/Downloads/coreui/src/views/notifications/modals/Modals.js",[],"/home/npm/Downloads/coreui/src/views/icons/brands/Brands.js",[],"/home/npm/Downloads/coreui/src/views/icons/flags/Flags.js",[],"/home/npm/Downloads/coreui/src/views/icons/coreui-icons/CoreUIIcons.js",[],"/home/npm/Downloads/coreui/src/views/theme/typography/Typography.js",[],"/home/npm/Downloads/coreui/src/views/charts/Charts.js",[],"/home/npm/Downloads/coreui/src/views/notifications/toaster/Toaster.js",[],"/home/npm/Downloads/coreui/src/views/buttons/button-groups/ButtonGroups.js",[],"/home/npm/Downloads/coreui/src/views/buttons/button-dropdowns/ButtonDropdowns.js",[],"/home/npm/Downloads/coreui/src/views/base/tooltips/Tooltips.js",[],"/home/npm/Downloads/coreui/src/views/base/switches/Switches.js",[],"/home/npm/Downloads/coreui/src/views/base/progress-bar/ProgressBar.js",[],"/home/npm/Downloads/coreui/src/views/buttons/buttons/Buttons.js",[],"/home/npm/Downloads/coreui/src/views/buttons/brand-buttons/BrandButtons.js",[],"/home/npm/Downloads/coreui/src/views/base/popovers/Popovers.js",[],"/home/npm/Downloads/coreui/src/views/base/paginations/Pagnations.js",[],"/home/npm/Downloads/coreui/src/views/base/jumbotrons/Jumbotrons.js",[],"/home/npm/Downloads/coreui/src/views/base/navbars/Navbars.js",[],"/home/npm/Downloads/coreui/src/views/base/navs/Navs.js",[],"/home/npm/Downloads/coreui/src/views/base/list-groups/ListGroups.js",[],"/home/npm/Downloads/coreui/src/views/base/collapses/Collapses.js",[],"/home/npm/Downloads/coreui/src/views/base/carousels/Carousels.js",[],"/home/npm/Downloads/coreui/src/views/base/breadcrumbs/Breadcrumbs.js",[],"/home/npm/Downloads/coreui/src/views/base/cards/Cards.js",[],"/home/npm/Downloads/coreui/src/views/base/tabs/Tabs.js",[],"/home/npm/Downloads/coreui/src/views/base/tables/Tables.js",[],"/home/npm/Downloads/coreui/src/views/base/forms/BasicForms.js",[],"/home/npm/Downloads/coreui/src/views/widgets/WidgetsBrand.js",[],"/home/npm/Downloads/coreui/src/views/widgets/WidgetsDropdown.js",[],"/home/npm/Downloads/coreui/src/views/charts/MainChartExample.js",[],"/home/npm/Downloads/coreui/src/views/charts/ChartBarSimple.js",[],"/home/npm/Downloads/coreui/src/views/charts/ChartLineSimple.js",[],"/home/npm/Downloads/coreui/src/reusable/index.js",[],"/home/npm/Downloads/coreui/src/reusable/DocsLink.js",[],"/home/npm/Desktop/latest/temp/src/index.js",[],["411","412"],"/home/npm/Desktop/latest/temp/src/store.js",[],"/home/npm/Desktop/latest/temp/src/serviceWorker.js",[],"/home/npm/Desktop/latest/temp/src/App.js",[],"/home/npm/Desktop/latest/temp/src/polyfill.js",[],"/home/npm/Desktop/latest/temp/src/assets/icons/index.js",[],"/home/npm/Desktop/latest/temp/src/views/Login.js",["413","414"],"import React,{Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nclass Login extends Component {\n  render() {\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"text\" placeholder=\"Username\" autoComplete=\"username\"  required/>\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\" required />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <Link color=\"info\" style={{color:\"#fff\"}} to=\"/dashboard\"  className=\"px-4 btn btn-warning\">Login</Link>\n                      </CCol>\n                     \n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-dark py-5 d-md-down-none\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                  <img src=\"logo.jpg\"/>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n}\n\nexport default Login\n","/home/npm/Desktop/latest/temp/src/containers/TheLayout.js",[],"/home/npm/Desktop/latest/temp/src/assets/icons/logo-negative.js",[],"/home/npm/Desktop/latest/temp/src/assets/icons/logo.js",[],"/home/npm/Desktop/latest/temp/src/assets/icons/sygnet.js",[],"/home/npm/Desktop/latest/temp/src/containers/index.js",[],"/home/npm/Desktop/latest/temp/src/containers/TheHeader.js",[],"/home/npm/Desktop/latest/temp/src/containers/TheSidebar.js",["415"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CCreateElement,\n  CSidebar,\n  CSidebarBrand,\n  CSidebarNav,\n  CSidebarNavDivider,\n  CSidebarNavTitle,\n  CSidebarMinimizer,\n  CSidebarNavDropdown,\n  CSidebarNavItem,\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\n\n// sidebar nav config\nimport navigation from './_nav'\n\nconst TheSidebar = () => {\n  const dispatch = useDispatch()\n  const show = useSelector(state => state.sidebarShow)\n\n  return (\n    <CSidebar style={{background:\"#f69236\"}}\n      show={show}\n      onShowChange={(val) => dispatch({type: 'set', sidebarShow: val })}\n    >\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\n      <img src=\"/logo.png\" alt=\"logo\" title=\"Brand of awash bank!\"   className=\"c-sidebar-brand-full\"\n          height={35}/>\n        {/* <CIcon\n          className=\"c-sidebar-brand-full\"\n          name=\"logo-negative\"\n          height={35}\n        /> */}\n        {/* <img src=\"logo.png\" alt=\"logo\"/> */}\n        {/* <CIcon\n          className=\"c-sidebar-brand-minimized\"\n          name=\"sygnet\"\n          height={35}\n        /> */}\n      </CSidebarBrand>\n      <CSidebarNav>\n\n        <CCreateElement\n          items={navigation}\n          components={{\n            CSidebarNavDivider,\n            CSidebarNavDropdown,\n            CSidebarNavItem,\n            CSidebarNavTitle\n          }}\n        />\n      </CSidebarNav>\n      <CSidebarMinimizer className=\"c-d-md-down-none\"/>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(TheSidebar)\n","/home/npm/Desktop/latest/temp/src/containers/TheFooter.js",["416"],"import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst TheFooter = () => {\n  return (\n    <CFooter fixed={false}>\n      <div>\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">CBO</a>\n        <span className=\"ml-1\">&copy; 2021.</span>\n      </div>\n      <div className=\"mfs-auto\">\n        <span className=\"mr-1\">Powered by</span>\n        <a href=\"https://www.linkedin.com/in/dechasa-adeba-256193188/\" target=\"_blank\" rel=\"noopener noreferrer\">Dechasa Adeba</a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(TheFooter)\n","/home/npm/Desktop/latest/temp/src/containers/TheHeaderDropdown.js",[],"/home/npm/Desktop/latest/temp/src/containers/TheContent.js",[],"/home/npm/Desktop/latest/temp/src/containers/TheHeaderDropdownMssg.js",[],"/home/npm/Desktop/latest/temp/src/containers/_nav.js",[],"/home/npm/Desktop/latest/temp/src/routes.js",[],"/home/npm/Desktop/latest/temp/src/views/User.js",[],"/home/npm/Desktop/latest/temp/src/views/SettingDistrict.js",["417","418","419","420","421"],"import React,{Component} from 'react';\nimport {\n    CBadge,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CDataTable,\n    CModal,\n    CModalBody,\n    CModalFooter,\n    CModalHeader,\n    CModalTitle,\n    CFormGroup,\n    CInput,\n    CLabel,\n    CSelect,\n    CForm,\n    CButton,\n    CRow\n  } from '@coreui/react'  \n  import axios from 'axios';\n  import Swal from 'sweetalert2'\n  import usersData from './users/UsersData'\nimport { Link } from 'react-router-dom';\n  \n  const getBadge = status => {\n    switch (status) {\n      case 'Active': return'success';\n      case 'Inactive': return 'secondary'\n      case 'Pending': return 'warning'\n      case 'Banned': return 'danger'\n      default: return 'primary'\n    }\n  }\n  const fields = ['setting_name','setting_status', 'setting_date']\nclass SettingDistrict extends Component {\n    state = {\n        info:false,\n        status:'Active',\n        dataRows:[]\n    }\n    constructor(props) {\n        super(props);\n      \n    }\n    componentWillMount=()=>{\n        try {\n    axios.get('/settings/'+'District').then(res=>{\n     this.setState({dataRows:res.data});\n    });\n    } catch(err) {\n      \n    }\n    }\n    handleSave=(e)=>{\n        e.preventDefault();\n        const data={\n            setting_name:this.settingName,\n            status:this.state.status,\n            type:\"District\"\n        };\n\n        try {\n      \n            axios.post('/save_settings',data).then(res=>{\n                if(res.data[0].setting_id){\n                  this.handleResponseToast('New district has added successfully!',true);\n                  document.getElementById(\"reset-form\").reset();\n                  this.setState({info:false});\n                  this.componentWillMount();\n                }\n              });\n           } catch(err){\n            this.handleResponseToast('OOPS! Try again',false);\n            }\n          }\n\n        \n          handleResponseToast=(msg,status)=>{\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'top-end',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              didOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer)\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\n              }\n            })\n            if (status) {\n                Toast.fire({\n              icon: 'success',\n              title: msg\n            })\n          } else {\n            Toast.fire({\n              icon: 'error',\n              title: msg\n            })\n          }\n           }\n    render() { \n        return (\n            <>\n            <CRow>\n            <CCol>\n              <CCard>\n                <CCardHeader>\n                 Setting district information\n                  <div style={{float:'right'}}>\n                  <CButton className=\"btn btn-info btn-block btn-pill\" onClick={() => this.setState({info:true})}>Add district</CButton>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                <CDataTable\n                  items={this.state.dataRows}\n                  fields={fields}\n                  hover\n                  striped\n                  bordered\n                  size=\"sm\"\n                  itemsPerPage={10}\n                  pagination\n                  scopedSlots = {\n                      {\n                    'setting_status':\n                      (item)=>(\n                        <td>\n                          <CBadge\n                            color={getBadge(item.setting_status)}>\n                            {item.setting_status}\n                          </CBadge>\n                        </td>\n                      )\n                  },{\n                    'setting_date':\n                      (item)=>(\n                        <td>\n                            {item.setting_date.split('T05:00:00.000Z')[0]}\n                        </td>\n                      )\n                  }\n                }\n                />\n                </CCardBody>\n              </CCard>\n            </CCol>\n           \n          </CRow>\n           <CModal \n           show={this.state.info} \n           onClose={() => this.setState({info:false})}\n           color=\"info\"\n           >\n               <CForm onSubmit={this.handleSave.bind(this)} id=\"reset-form\" >\n           <CModalHeader closeButton>\n             <CModalTitle>New districts</CModalTitle>\n           </CModalHeader>\n           <CModalBody>\n           <CFormGroup>\n             <CLabel htmlFor=\"company\">district</CLabel>\n             <CInput id=\"company\" onChange={(e=>this.settingName=e.target.value)} style={{color:\"black\"}} placeholder=\"Enter district name\" required/>\n           </CFormGroup>\n           <CFormGroup>\n             <CLabel htmlFor=\"vat\">Status</CLabel>\n             <CSelect style={{color:\"black\"}} custom onChange={(e=>this.setState({status:e.target.value}))} name=\"ccmonth\" id=\"ccmonth\" required>\n                   <option value=\"Active\">Active</option>\n                   <option value=\"Pending\">Pending</option>\n                 </CSelect>\n           </CFormGroup>\n          \n           </CModalBody>\n           <CModalFooter>\n             <CButton color=\"secondary\" onClick={() => this.setState({info:false})}>Cancel</CButton>\n             <CButton color=\"info\" type=\"submit\">Save</CButton>\n           </CModalFooter>\n           </CForm>\n         </CModal>\n         </>\n        );\n    }\n}\n \nexport default SettingDistrict;","/home/npm/Desktop/latest/temp/src/views/SettingLanguage.js",["422","423","424","425","426"],"import React,{Component} from 'react';\nimport {\n    CBadge,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CDataTable,\n    CModal,\n    CModalBody,\n    CModalFooter,\n    CModalHeader,\n    CModalTitle,\n    CFormGroup,\n    CInput,\n    CLabel,\n    CSelect,\n    CForm,\n    CButton,\n    CRow\n  } from '@coreui/react'  \n  import axios from 'axios';\n  import Swal from 'sweetalert2'\n  import usersData from './users/UsersData'\nimport { Link } from 'react-router-dom';\n  \n  const getBadge = status => {\n    switch (status) {\n      case 'Active': return'success';\n      case 'Inactive': return 'secondary'\n      case 'Pending': return 'warning'\n      case 'Banned': return 'danger'\n      default: return 'primary'\n    }\n  }\n  const fields = ['setting_name','setting_status', 'setting_date']\nclass SettingLanguage extends Component {\n    state = {\n        info:false,\n        status:'Active',\n        dataRows:[]\n    }\n    constructor(props) {\n        super(props);\n      \n    }\n    componentWillMount=()=>{\n        try {\n    axios.get('/settings/'+'Language').then(res=>{\n     this.setState({dataRows:res.data});\n    });\n    } catch(err) {\n      \n    }\n    }\n    handleSave=(e)=>{\n        e.preventDefault();\n        const data={\n            setting_name:this.settingName,\n            status:this.state.status,\n            type:\"Language\"\n        };\n\n        try {\n      \n            axios.post('/save_settings',data).then(res=>{\n                if(res.data[0].setting_id){\n                  this.handleResponseToast('New language has added successfully!',true);\n                  document.getElementById(\"reset-form\").reset();\n                  this.setState({info:false});\n                  this.componentWillMount();\n                }\n              });\n           } catch(err){\n            this.handleResponseToast('OOPS! Try again',false);\n            }\n          }\n\n        \n          handleResponseToast=(msg,status)=>{\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'top-end',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              didOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer)\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\n              }\n            })\n            if (status) {\n                Toast.fire({\n              icon: 'success',\n              title: msg\n            })\n          } else {\n            Toast.fire({\n              icon: 'error',\n              title: msg\n            })\n          }\n           }\n    render() { \n        return (\n            <>\n            <CRow>\n            <CCol>\n              <CCard>\n                <CCardHeader>\n                 Setting language information\n                  <div style={{float:'right'}}>\n                  <CButton className=\"btn btn-info btn-block btn-pill\" onClick={() => this.setState({info:true})}>Add language</CButton>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                <CDataTable\n                  items={this.state.dataRows}\n                  fields={fields}\n                  hover\n                  striped\n                  bordered\n                  size=\"sm\"\n                  itemsPerPage={10}\n                  pagination\n                  scopedSlots = {\n                      {\n                    'setting_status':\n                      (item)=>(\n                        <td>\n                          <CBadge\n                            color={getBadge(item.setting_status)}>\n                            {item.setting_status}\n                          </CBadge>\n                        </td>\n                      )\n                  },{\n                    'setting_date':\n                      (item)=>(\n                        <td>\n                            {item.setting_date.split('T05:00:00.000Z')[0]}\n                        </td>\n                      )\n                  }\n                }\n                />\n                </CCardBody>\n              </CCard>\n            </CCol>\n           \n          </CRow>\n           <CModal \n           show={this.state.info} \n           onClose={() => this.setState({info:false})}\n           color=\"info\"\n           >\n               <CForm onSubmit={this.handleSave.bind(this)} id=\"reset-form\">\n           <CModalHeader closeButton>\n             <CModalTitle>New languages</CModalTitle>\n           </CModalHeader>\n           <CModalBody>\n           <CFormGroup>\n             <CLabel htmlFor=\"company\">Language</CLabel>\n             <CInput id=\"company\" onChange={(e=>this.settingName=e.target.value)} style={{color:\"black\"}} placeholder=\"Enter language name\" required/>\n           </CFormGroup>\n           <CFormGroup>\n             <CLabel htmlFor=\"vat\">Status</CLabel>\n             <CSelect style={{color:\"black\"}} custom onChange={(e=>this.setState({status:e.target.value}))} name=\"ccmonth\" id=\"ccmonth\" required>\n                   <option value=\"Active\">Active</option>\n                   <option value=\"Pending\">Pending</option>\n                 </CSelect>\n           </CFormGroup>\n          \n           </CModalBody>\n           <CModalFooter>\n             <CButton color=\"secondary\" onClick={() => this.setState({info:false})}>Cancel</CButton>\n             <CButton color=\"info\" type=\"submit\">Save</CButton>\n           </CModalFooter>\n           </CForm>\n         </CModal>\n         </>\n        );\n    }\n}\n \nexport default SettingLanguage;","/home/npm/Desktop/latest/temp/src/views/SettingRegion.js",["427","428","429","430"],"import React,{Component} from 'react';\nimport {\n    CBadge,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CDataTable,\n    CModal,\n    CModalBody,\n    CModalFooter,\n    CModalHeader,\n    CModalTitle,\n    CFormGroup,\n    CInput,\n    CLabel,\n    CSelect,\n    CForm,\n    CButton,\n    CRow\n  } from '@coreui/react'  \n  import axios from 'axios';\n  import Swal from 'sweetalert2'\n  import { Link } from 'react-router-dom';\n  \n  const getBadge = status => {\n    switch (status) {\n      case 'Active': return'success';\n      case 'Inactive': return 'secondary'\n      case 'Pending': return 'warning'\n      case 'Banned': return 'danger'\n      default: return 'primary'\n    }\n  }\n  const fields = ['setting_name','setting_status', 'setting_date']\nclass SettingRegion extends Component {\n    state = {\n        info:false,\n        status:'Active',\n        dataRows:[]\n    }\n    constructor(props) {\n        super(props);\n      \n    }\n    componentWillMount=()=>{\n        try {\n    axios.get('/settings/'+'Region').then(res=>{\n     this.setState({dataRows:res.data});\n    });\n    } catch(err) {\n      \n    }\n    }\n    handleSave=(e)=>{\n        e.preventDefault();\n        const data={\n            setting_name:this.settingName,\n            status:this.state.status,\n            type:\"Region\"\n        };\n\n        try {\n      \n            axios.post('/save_settings',data).then(res=>{\n              if(res.data[0].setting_id){\n                this.handleResponseToast('New region has added successfully!',true);\n                document.getElementById(\"reset-form\").reset();\n                this.setState({info:false});\n              }\n            });\n           } catch(err){\n            this.handleResponseToast('OOPS! Try again',false);\n            }\n          }\n\n        \n          handleResponseToast=(msg,status)=>{\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'top-end',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              didOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer)\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\n              }\n            })\n            if (status) {\n                Toast.fire({\n              icon: 'success',\n              title: msg\n            })\n          } else {\n            Toast.fire({\n              icon: 'error',\n              title: msg\n            })\n          }\n           }\n    render() { \n        return (\n            <>\n            <CRow>\n            <CCol>\n              <CCard>\n                <CCardHeader>\n                 Setting region information\n                  <div style={{float:'right'}}>\n                  <CButton className=\"btn btn-info btn-block btn-pill\" onClick={() => this.setState({info:true})}>Add Region</CButton>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                <CDataTable\n                  items={this.state.dataRows}\n                  fields={fields}\n                  hover\n                  striped\n                  bordered\n                  size=\"sm\"\n                  itemsPerPage={10}\n                  pagination\n                  scopedSlots = {\n                      {\n                    'setting_status':\n                      (item)=>(\n                        <td>\n                          <CBadge\n                            color={getBadge(item.setting_status)}>\n                            {item.setting_status}\n                          </CBadge>\n                        </td>\n                      )\n                  },{\n                    'setting_date':\n                      (item)=>(\n                        <td>\n                            {item.setting_date.split('T05:00:00.000Z')[0]}\n                        </td>\n                      )\n                  }\n                }\n                />\n                </CCardBody>\n              </CCard>\n            </CCol>\n           \n          </CRow>\n           <CModal \n           show={this.state.info} \n           onClose={() => this.setState({info:false})}\n           color=\"info\"\n           >\n           <CForm onSubmit={this.handleSave.bind(this)} id=\"reset-form\">\n           <CModalHeader closeButton>\n             <CModalTitle>New regions</CModalTitle>\n           </CModalHeader>\n           <CModalBody>\n           <CFormGroup>\n             <CLabel htmlFor=\"company\">Region</CLabel>\n             <CInput id=\"company\" onChange={(e=>this.settingName=e.target.value)} style={{color:\"black\"}} placeholder=\"Enter region name\" required/>\n           </CFormGroup>\n           <CFormGroup>\n             <CLabel htmlFor=\"vat\">Status</CLabel>\n             <CSelect style={{color:\"black\"}} custom onChange={(e=>this.setState({status:e.target.value}))} name=\"ccmonth\" id=\"ccmonth\" required>\n                   <option value=\"Active\">Active</option>\n                   <option value=\"Pending\">Pending</option>\n                 </CSelect>\n           </CFormGroup>\n          \n           </CModalBody>\n           <CModalFooter>\n             <CButton color=\"secondary\" onClick={() => this.setState({info:false})}>Cancel</CButton>\n             <CButton color=\"info\" type=\"submit\">Save</CButton>\n           </CModalFooter>\n           </CForm>\n         </CModal>\n         </>\n        );\n    }\n}\n \nexport default SettingRegion;","/home/npm/Desktop/latest/temp/src/views/SettingInstitute.js",["431","432","433","434"],"import React,{Component} from 'react';\nimport {\n    CBadge,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CDataTable,\n    CModal,\n    CModalBody,\n    CModalFooter,\n    CModalHeader,\n    CModalTitle,\n    CFormGroup,\n    CInput,\n    CLabel,\n    CSelect,\n    CForm,\n    CButton,\n    CRow\n  } from '@coreui/react'  \n  import axios from 'axios';\n  import Swal from 'sweetalert2'\n  import { Link } from 'react-router-dom';\n  \n  const getBadge = status => {\n    switch (status) {\n      case 'Active': return'success';\n      case 'Inactive': return 'secondary'\n      case 'Pending': return 'warning'\n      case 'Banned': return 'danger'\n      default: return 'primary'\n    }\n  }\n  const fields = ['setting_name','setting_status', 'setting_date']\nclass SettingInstitute extends Component {\n    state = {\n        info:false,\n        status:'Active',\n        dataRows:[]\n    }\n    constructor(props) {\n        super(props);\n      \n    }\n    componentWillMount=()=>{\n        try {\n    axios.get('/settings/'+'Institute').then(res=>{\n     this.setState({dataRows:res.data});\n    });\n    } catch(err) {\n      \n    }\n    }\n    handleSave=(e)=>{\n        e.preventDefault();\n        const data={\n            setting_name:this.settingName,\n            status:this.state.status,\n            type:\"Institute\"\n        };\n\n        try {\n      \n            axios.post('/save_settings',data).then(res=>{\n                if(res.data[0].setting_id){\n                  this.handleResponseToast('New institute has added successfully!',true);\n                  document.getElementById(\"reset-form\").reset();\n                  this.setState({info:false});\n                  this.componentWillMount();\n                }\n              });\n           } catch(err){\n            this.handleResponseToast('OOPS! Try again',false);\n            }\n          }\n\n        \n          handleResponseToast=(msg,status)=>{\n            const Toast = Swal.mixin({\n              toast: true,\n              position: 'top-end',\n              showConfirmButton: false,\n              timer: 4000,\n              timerProgressBar: true,\n              didOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer)\n                toast.addEventListener('mouseleave', Swal.resumeTimer)\n              }\n            })\n            if (status) {\n                Toast.fire({\n              icon: 'success',\n              title: msg\n            })\n          } else {\n            Toast.fire({\n              icon: 'error',\n              title: msg\n            })\n          }\n           }\n    render() { \n        return (\n            <>\n            <CRow>\n            <CCol>\n              <CCard>\n                <CCardHeader>\n                 Setting institute information\n                  <div style={{float:'right'}}>\n                  <CButton className=\"btn btn-info btn-block btn-pill\" onClick={() => this.setState({info:true})}>Add Institute</CButton>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                <CDataTable\n                  items={this.state.dataRows}\n                  fields={fields}\n                  hover\n                  striped\n                  bordered\n                  size=\"sm\"\n                  itemsPerPage={10}\n                  pagination\n                  scopedSlots = {\n                      {\n                    'setting_status':\n                      (item)=>(\n                        <td>\n                          <CBadge\n                            color={getBadge(item.setting_status)}>\n                            {item.setting_status}\n                          </CBadge>\n                        </td>\n                      )\n                  },{\n                    'setting_date':\n                      (item)=>(\n                        <td>\n                            {item.setting_date.split('T05:00:00.000Z')[0]}\n                        </td>\n                      )\n                  }\n                }\n                />\n                </CCardBody>\n              </CCard>\n            </CCol>\n           \n          </CRow>\n           <CModal \n           show={this.state.info} \n           onClose={() => this.setState({info:false})}\n           color=\"info\"\n           >\n               <CForm onSubmit={this.handleSave.bind(this)} id=\"reset-form\" >\n           <CModalHeader closeButton>\n             <CModalTitle>New institutes</CModalTitle>\n           </CModalHeader>\n           <CModalBody>\n           <CFormGroup>\n             <CLabel htmlFor=\"company\">institute</CLabel>\n             <CInput id=\"company\" onChange={(e=>this.settingName=e.target.value)} style={{color:\"black\"}} placeholder=\"Enter institute name\" required/>\n           </CFormGroup>\n           <CFormGroup>\n             <CLabel htmlFor=\"vat\">Status</CLabel>\n             <CSelect style={{color:\"black\"}} custom onChange={(e=>this.setState({status:e.target.value}))} name=\"ccmonth\" id=\"ccmonth\" required>\n                   <option value=\"Active\">Active</option>\n                   <option value=\"Pending\">Pending</option>\n                 </CSelect>\n           </CFormGroup>\n          \n           </CModalBody>\n           <CModalFooter>\n             <CButton color=\"secondary\" onClick={() => this.setState({info:false})}>Cancel</CButton>\n             <CButton color=\"info\" type=\"submit\">Save</CButton>\n           </CModalFooter>\n           </CForm>\n         </CModal>\n         </>\n        );\n    }\n}\n \nexport default SettingInstitute;","/home/npm/Desktop/latest/temp/src/views/AddVacancy.js",["435","436","437"],"import React,{Component} from 'react';\n\n\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CInput,\n    CLabel,\n    CForm,\n    CFormGroup,\n    CRow,\n    CSelect\n  } from '@coreui/react'\n  import CIcon from '@coreui/icons-react'\n  import axios from 'axios';\n  import Swal from 'sweetalert2'\n  import Select from 'react-select';\n\n  // summernote plugins START\n  import ReactSummernote from 'react-summernote';\n  import 'react-summernote/dist/react-summernote.css'; \n  import 'react-summernote/lang/summernote-ru-RU';\n  // summernote plugins END\n\n  class AddVacancy extends Component {\n     state={\n       editor:null,\n       selected:[],\n     \n     }\n \n\n    constructor(props) {\n      super(props);\n    }\n    handleChange = (event) => {\n      let select = [];\n      for(let row in event){\n        select.push(event[row].value);\n      }\n      this.state.selected=select;\n    }\n    saveNewVacancy=(e)=>{\n      e.preventDefault();\n    const data={\n      vacancy_type:this.vacancyType,\n      employee_type:this.employeeType,\n      duty_station:this.state.selected,\n      experience:this.experience,\n      position:this.position,\n      deadline:this.deadLine,\n      status:this.status,\n      description:this.state.editor\n    }\n    try {\n      \n      axios.post('/save_vacancy',data).then(res=>{\n        if(res.data[0].vacancy_id){\n          this.handleResponseToast('New vacancy has added successfully!',true);\n          document.getElementById(\"reset-form\").reset();\n\n        }\n      });\n     } catch(err){\n      this.handleResponseToast('OOPS! Try again',false);\n      }\n    }\n    onChange=(content)=>{\n     this.state.editor=content;\n    }\n    \n    handleResponseToast=(msg,status)=>{\n      const Toast = Swal.mixin({\n        toast: true,\n        position: 'top-end',\n        showConfirmButton: false,\n        timer: 4000,\n        timerProgressBar: true,\n        didOpen: (toast) => {\n          toast.addEventListener('mouseenter', Swal.stopTimer)\n          toast.addEventListener('mouseleave', Swal.resumeTimer)\n        }\n      })\n      if (status) {\n          Toast.fire({\n        icon: 'success',\n        title: msg\n      })\n    } else {\n      Toast.fire({\n        icon: 'error',\n        title: msg\n      })\n    }\n     }\n    render() { \n      // const [collapsed, setCollapsed] = React.useState(true)\n      const options = [\n        { value: 'Head office', label: 'Head office' },\n        { value: 'Finfinne district', label: 'Finfinne district' },\n        { value: 'Asosa district', label: 'Asosa district' },\n        { value: 'North district', label: 'North district' },\n        { value: 'Adama district', label: 'Adama district' }\n      ]\n        return (\n            <CRow>\n            <CCol xs=\"12\">\n            <CCard>\n            <CCardHeader>\n              Add New\n              <small> Vacancy</small>\n            </CCardHeader>\n            <CCardBody>\n              <CForm onSubmit={this.saveNewVacancy.bind(this)} id=\"reset-form\">\n              <CRow>\n              \n              <CCol xs=\"6\">\n              <CFormGroup>\n                <CLabel htmlFor=\"company\">Duty station</CLabel>\n            <Select required style={{color:\"black\"}} onChange={this.handleChange}\n             defaultValue={[options[1],options[4]]}\n             options={options} isMulti  name=\"colors\" \n             className=\"basic-multi-select\"\n              classNamePrefix=\"select\">\n               \n              </Select>\n              </CFormGroup>\n                </CCol>\n                <CCol xs=\"6\">\n                <CFormGroup>\n                <CLabel htmlFor=\"vat\">Employee Type</CLabel>\n                <CSelect style={{color:\"black\"}} onChange={(e=>this.employeeType=e.target.value)} custom name=\"ccmonth\" id=\"ccmonth\" required>\n                      <option value=\"\">Nothing selected</option>\n                      <option value=\"Permanent\">Permanent</option>\n                      <option value=\"Contract\">Contract</option>\n                    </CSelect>\n                </CFormGroup>\n                  </CCol>\n                </CRow>\n              <CRow>\n              <CCol xs=\"6\">\n              <CFormGroup>\n                <CLabel htmlFor=\"company\">Vacancy type</CLabel>\n                <CSelect style={{color:\"black\"}} custom onChange={(e=>this.vacancyType=e.target.value)} name=\"ccmonth\" id=\"ccmonth\" required>\n                      <option value=\"\">Nothing selected</option>\n                      <option value=\"External\">External</option>\n                      <option value=\"Internal\">Internal</option>\n                    </CSelect>\n              </CFormGroup>\n                </CCol>\n                <CCol xs=\"6\">\n                <CFormGroup>\n                <CLabel htmlFor=\"vat\">Experience</CLabel>\n                <CInput style={{color:\"black\"}} onChange={(e=>this.experience=e.target.value)} placeholder=\"ex: 4 years\" required />\n                </CFormGroup>\n                  </CCol>\n                </CRow>\n              <CRow>\n              <CCol xs=\"4\">\n              <CFormGroup>\n                <CLabel htmlFor=\"company\">Position</CLabel>\n                <CInput style={{color:\"black\"}} onChange={(e=>this.position=e.target.value)}  placeholder=\"ex: Manager II\" required />\n                \n              </CFormGroup>\n                </CCol>\n                <CCol xs=\"4\">\n                <CFormGroup>\n                <CLabel htmlFor=\"vat\">DeadLine</CLabel>\n                <CInput type=\"date\" style={{color:\"black\"}} onChange={(e=>this.deadLine=e.target.value)} id=\"date-input\" name=\"date-input\" placeholder=\"date\"/>\n                </CFormGroup>\n                  </CCol>\n                <CCol xs=\"4\">\n                <CFormGroup>\n                <CLabel htmlFor=\"vat\">Status</CLabel>\n                <CSelect style={{color:\"black\"}} onChange={(e=>this.status=e.target.value)} custom name=\"ccmonth\" id=\"ccmonth\" required>\n                      <option value=\"\">Nothing selected</option>\n                      <option value=\"Active\">Active</option>\n                      <option value=\"Pending\">Pending</option>\n                    </CSelect>\n                </CFormGroup>\n                  </CCol>\n                </CRow>\n              <CFormGroup>\n                <CLabel htmlFor=\"country\">General description about vacancy </CLabel>\n                <ReactSummernote\n                 value=\"\"\n                  onChange={this.onChange}>Requirements to Apply\n                    B.Sc. degree in computer science, Information technology, Information system, Software Engineering, Electrical Engineering, Computer Engineering, Management Information System and Business Administration Information’s Systems with CGPA of 3.00 and above.\n                    The applicants must have desirable knowledge, behaviors/right attitudes, and other attributes\n                    he applicants must have proficiency in Afaan Oromo, Amharic, English Languages, and knowledge of other local languages in the respective branch areas are also an added advantage.\n                    Age of the applicant shall not exceed 27 years (inclusive).\n                    Only graduate of 2020 and 2021 G.C.\n                  Remuneration: As per the Bank’s salary scale and benefit scheme\n                  Terms of employment: Permanent after probationary period\n                  Registration Deadline: November 21, 2021\n                  Place of Work: Head Office and District Offices</ReactSummernote>\n              </CFormGroup>\n              <CButton type=\"submit\" size=\"sm\" color=\"info\"><CIcon name=\"cil-scrubber\" /> Submit</CButton> <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\n            </CForm>\n            </CCardBody>\n          </CCard>\n            </CCol>\n          </CRow>\n        );\n    }\n}\n \nexport default AddVacancy;","/home/npm/Desktop/latest/temp/src/views/ClosedVacancy.js",["438","439"],"import React,{Component} from 'react';\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CDataTable,\n    CRow\n  } from '@coreui/react'  \n  import axios from 'axios';\n  import { Link } from 'react-router-dom';\n\n  const fields = ['positions','vacancy_type', 'employee_type', 'experience','deadline']\nclass ClosedVacancy extends Component {\n  state = {\n    dataRows:[]\n  }\n    constructor(props) {\n        super(props);\n    }\n    componentWillMount=()=>{\n      try {\n     axios.get('/closed_vacancy').then(res=>{\n      this.setState({dataRows:res.data});\n     });\n     } catch(err) {\n     }\n     }\n    render() { \n        return (\n            <CRow>\n            <CCol>\n              <CCard>\n                <CCardHeader>\n                  All <span style={{color:\"red\"}}>closed</span> vacancies\n                \n                </CCardHeader>\n                <CCardBody>\n                <CDataTable\n                  items={this.state.dataRows}\n                  fields={fields}\n                  hover\n                  striped\n                  bordered\n                  size=\"sm\"\n                  itemsPerPage={10}\n                  pagination\n                  scopedSlots = {{\n                  'deadline':\n                    (item)=>(\n                      <td>\n                          {item.deadline.split('T05:00:00.000Z')[0]}\n                      </td>\n                    )\n                }\n              }\n                />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        );\n    }\n}\n \nexport default ClosedVacancy;","/home/npm/Desktop/latest/temp/src/views/Dashboard.js",["440"],"import React, { lazy } from 'react'\nimport {\n  CWidgetDropdown,\n  CDropdown,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport ChartLineSimple from './charts/ChartLineSimple'\n\nconst Dashboard = () => {\n  return (\n      <>\n     <CRow>\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-primary\"\n          header=\"9.823\"\n          text=\"Total job seeker\"\n          footerSlot={\n            <ChartLineSimple\n              pointed\n              className=\"c-chart-wrapper mt-3 mx-3\"\n              style={{height: '70px'}}\n              dataPoints={[]}\n              pointHoverBackgroundColor=\"primary\"\n              label=\"Members\"\n              labels=\"months\"\n            />\n          }\n        >\n          <CDropdown>\n              <CIcon name=\"cil-settings\"/>\n      \n          </CDropdown>\n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-info\"\n          header=\"9.823\"\n          text=\"Total new vacancy\"\n          footerSlot={\n            <ChartLineSimple\n              pointed\n              className=\"mt-3 mx-3\"\n              style={{height: '70px'}}\n              dataPoints={[]}\n              pointHoverBackgroundColor=\"info\"\n              options={{ elements: { line: { tension: 0.00001 }}}}\n              label=\"Members\"\n              labels=\"months\"\n            />\n          }\n        >\n          <CDropdown>\n              <CIcon name=\"cil-location-pin\"/>\n            \n          </CDropdown>\n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-warning\"\n          header=\"9.823\"\n          text=\"Total closed vacancy\"\n          footerSlot={\n            <ChartLineSimple\n              className=\"mt-3\"\n              style={{height: '70px'}}\n              backgroundColor=\"rgba(255,255,255,.2)\"\n              dataPoints={[]}\n              options={{ elements: { line: { borderWidth: 2.5 }}}}\n              pointHoverBackgroundColor=\"warning\"\n              label=\"Members\"\n              labels=\"months\"\n            />\n          }\n        >\n          <CDropdown>\n              <CIcon name=\"cil-settings\"/>\n     \n          \n          </CDropdown>\n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"3\">\n      <CWidgetDropdown\n          color=\"gradient-info\"\n          header=\"9.823\"\n          text=\"Total districts\"\n          footerSlot={\n            <ChartLineSimple\n              className=\"mt-3\"\n              style={{height: '70px'}}\n              backgroundColor=\"rgba(255,255,255,.2)\"\n              dataPoints={[]}\n              options={{ elements: { line: { borderWidth: 2.5 }}}}\n              pointHoverBackgroundColor=\"warning\"\n              label=\"Members\"\n              labels=\"months\"\n              />\n          }\n        >\n          <CDropdown>\n              <CIcon name=\"cil-settings\"/>          \n          </CDropdown>\n        </CWidgetDropdown>\n      </CCol>\n    </CRow>\n       <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n              New vacancy {' & '} Applied job seeker\n            </CCardHeader>\n            <CCardBody>\n              <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th className=\"text-center\">#</th>\n                    <th>Vacancies</th>\n                    <th className=\"text-center\">Total applied</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"text-center\">\n                      1\n                    </td>\n                    <td>\n                      <div>Yiorgos Avraamu</div>\n                      <div className=\"small text-muted\">\n                        <span>New</span> | Registered: Jan 1, 2015\n                      </div>\n                    </td>\n                    <td className=\"text-center\">\n                      456\n                    </td>\n                   </tr>\n                  \n                </tbody>\n              </table>\n\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n     </>\n  )\n}\n\nexport default Dashboard\n","/home/npm/Desktop/latest/temp/src/views/Appliers.js",["441","442"],"/home/npm/Desktop/latest/temp/src/views/NewVacancy.js",["443","444"],"import React,{Component} from 'react';\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CDataTable,\n    CRow\n  } from '@coreui/react'  \n  import axios from 'axios';\n  import { Link } from 'react-router-dom';\n  const fields = ['positions','vacancy_type', 'employee_type', 'experience','deadline','total_applied']\nclass NewVacancy extends Component {\n  state = {\n    dataRows:[]\n  }\n    constructor(props) {\n        super(props);\n    }\n    componentWillMount=()=>{\n      try {\n     axios.get('/new_vacancy').then(res=>{\n      this.setState({dataRows:res.data});\n     });\n     } catch(err) {\n     }\n     }\n    render() { \n        return (\n            <CRow>\n            <CCol>\n              <CCard>\n                <CCardHeader>\n                  All <span style={{color:\"green\"}}>new(not closed)</span> vacancies\n                  <div style={{float:'right'}}>\n                  <Link className=\"btn btn-info btn-block btn-pill\" to=\"/add_vacancy\">Add New</Link>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                <CDataTable\n                  items={this.state.dataRows}\n                  fields={fields}\n                  hover\n                  striped\n                  bordered\n                  size=\"sm\"\n                  itemsPerPage={10}\n                  pagination\n                  scopedSlots = {\n                    {\n                  'deadline':\n                    (item)=>(\n                      <td>\n                          {item.deadline.split('T05:00:00.000Z')[0]}\n                      </td>\n                    )\n                },{\n                  'total_applied':\n                    (item)=>(\n                      <td>\n                          <Link to={`/appliers/${item.vacancy_id}`}>{item.total_applied}</Link>\n                      </td>\n                    )\n                }\n              }\n                />\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        );\n    }\n}\n \nexport default NewVacancy;","/home/npm/Desktop/latest/temp/src/views/users/UsersData.js",[],"/home/npm/Desktop/latest/temp/src/views/charts/ChartLineSimple.js",[],{"ruleId":"445","replacedBy":"446"},{"ruleId":"447","replacedBy":"448"},{"ruleId":"449","severity":1,"message":"450","line":4,"column":3,"nodeType":"451","messageId":"452","endLine":4,"endColumn":10},{"ruleId":"453","severity":1,"message":"454","line":60,"column":19,"nodeType":"455","endLine":60,"endColumn":40},{"ruleId":"449","severity":1,"message":"456","line":15,"column":8,"nodeType":"451","messageId":"452","endLine":15,"endColumn":13},{"ruleId":"457","severity":1,"message":"458","line":8,"column":9,"nodeType":"455","endLine":8,"endColumn":63},{"ruleId":"449","severity":1,"message":"459","line":24,"column":10,"nodeType":"451","messageId":"452","endLine":24,"endColumn":19},{"ruleId":"449","severity":1,"message":"460","line":25,"column":10,"nodeType":"451","messageId":"452","endLine":25,"endColumn":14},{"ruleId":"461","severity":1,"message":"462","line":43,"column":5,"nodeType":"463","messageId":"464","endLine":46,"endColumn":6},{"ruleId":"465","severity":1,"message":"466","line":49,"column":27,"nodeType":"467","messageId":"468","endLine":49,"endColumn":28},{"ruleId":"469","severity":1,"message":"470","line":137,"column":20,"nodeType":"471","messageId":"472","endLine":137,"endColumn":21},{"ruleId":"449","severity":1,"message":"459","line":24,"column":10,"nodeType":"451","messageId":"452","endLine":24,"endColumn":19},{"ruleId":"449","severity":1,"message":"460","line":25,"column":10,"nodeType":"451","messageId":"452","endLine":25,"endColumn":14},{"ruleId":"461","severity":1,"message":"462","line":43,"column":5,"nodeType":"463","messageId":"464","endLine":46,"endColumn":6},{"ruleId":"465","severity":1,"message":"466","line":49,"column":27,"nodeType":"467","messageId":"468","endLine":49,"endColumn":28},{"ruleId":"469","severity":1,"message":"470","line":137,"column":20,"nodeType":"471","messageId":"472","endLine":137,"endColumn":21},{"ruleId":"449","severity":1,"message":"460","line":24,"column":12,"nodeType":"451","messageId":"452","endLine":24,"endColumn":16},{"ruleId":"461","severity":1,"message":"462","line":42,"column":5,"nodeType":"463","messageId":"464","endLine":45,"endColumn":6},{"ruleId":"465","severity":1,"message":"466","line":48,"column":27,"nodeType":"467","messageId":"468","endLine":48,"endColumn":28},{"ruleId":"469","severity":1,"message":"470","line":135,"column":20,"nodeType":"471","messageId":"472","endLine":135,"endColumn":21},{"ruleId":"449","severity":1,"message":"460","line":24,"column":12,"nodeType":"451","messageId":"452","endLine":24,"endColumn":16},{"ruleId":"461","severity":1,"message":"462","line":42,"column":5,"nodeType":"463","messageId":"464","endLine":45,"endColumn":6},{"ruleId":"465","severity":1,"message":"466","line":48,"column":27,"nodeType":"467","messageId":"468","endLine":48,"endColumn":28},{"ruleId":"469","severity":1,"message":"470","line":136,"column":20,"nodeType":"471","messageId":"472","endLine":136,"endColumn":21},{"ruleId":"461","severity":1,"message":"462","line":36,"column":5,"nodeType":"463","messageId":"464","endLine":38,"endColumn":6},{"ruleId":"473","severity":1,"message":"474","line":44,"column":7,"nodeType":"475","messageId":"476","endLine":44,"endColumn":17},{"ruleId":"473","severity":1,"message":"474","line":72,"column":6,"nodeType":"475","messageId":"476","endLine":72,"endColumn":16},{"ruleId":"449","severity":1,"message":"460","line":11,"column":12,"nodeType":"451","messageId":"452","endLine":11,"endColumn":16},{"ruleId":"461","severity":1,"message":"462","line":18,"column":5,"nodeType":"463","messageId":"464","endLine":20,"endColumn":6},{"ruleId":"449","severity":1,"message":"477","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":21},{"ruleId":"461","severity":1,"message":"462","line":43,"column":5,"nodeType":"463","messageId":"464","endLine":46,"endColumn":6},{"ruleId":"469","severity":1,"message":"470","line":137,"column":20,"nodeType":"471","messageId":"472","endLine":137,"endColumn":21},{"ruleId":"461","severity":1,"message":"462","line":17,"column":5,"nodeType":"463","messageId":"464","endLine":19,"endColumn":6},{"ruleId":"469","severity":1,"message":"470","line":57,"column":18,"nodeType":"471","messageId":"472","endLine":57,"endColumn":19},"no-native-reassign",["478"],"no-negated-in-lhs",["479"],"no-unused-vars","'CButton' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'usersData' is defined but never used.","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'lazy' is defined but never used.","no-global-assign","no-unsafe-negation"]