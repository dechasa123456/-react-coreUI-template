{"ast":null,"code":"import _classCallCheck from \"/home/npm/Downloads/temp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/npm/Downloads/temp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/npm/Downloads/temp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/npm/Downloads/temp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/npm/Downloads/temp/src/views/SettingRegion.js\";\nimport React, { Component } from 'react';\nimport { CBadge, CCard, CCardBody, CCardHeader, CCol, CDataTable, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle, CFormGroup, CInput, CLabel, CSelect, CButton, CRow } from '@coreui/react';\nimport usersData from './users/UsersData';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar fields = ['vacancy_name', 'registered', 'role', 'Action'];\n\nvar SettingRegion = /*#__PURE__*/function (_Component) {\n  _inherits(SettingRegion, _Component);\n\n  var _super = _createSuper(SettingRegion);\n\n  function SettingRegion(props) {\n    var _this;\n\n    _classCallCheck(this, SettingRegion);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      info: false\n    };\n    return _this;\n  }\n\n  _createClass(SettingRegion, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(CRow, {\n        children: [/*#__PURE__*/_jsxDEV(CCol, {\n          children: /*#__PURE__*/_jsxDEV(CCard, {\n            children: [/*#__PURE__*/_jsxDEV(CCardHeader, {\n              children: [\"Combined All Table\", /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  float: 'right'\n                },\n                children: /*#__PURE__*/_jsxDEV(CButton, {\n                  className: \"btn btn-info btn-block btn-pill\",\n                  onClick: function onClick() {\n                    return _this2.setState({\n                      info: true\n                    });\n                  },\n                  children: \"Add Region\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n              children: /*#__PURE__*/_jsxDEV(CDataTable, {\n                items: usersData,\n                fields: fields,\n                hover: true,\n                striped: true,\n                bordered: true,\n                size: \"sm\",\n                itemsPerPage: 10,\n                pagination: true,\n                scopedSlots: {\n                  'Action': function Action(item) {\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(CBadge, {\n                        color: getBadge(item.status),\n                        children: item.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 67,\n                        columnNumber: 27\n                      }, _this2)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 25\n                    }, _this2);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CModal, {\n          show: this.state.info,\n          onClick: function onClick() {\n            return _this2.setState({\n              info: false\n            });\n          },\n          color: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(CModalTitle, {\n              children: \"Modal title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CModalBody, {\n            children: [/*#__PURE__*/_jsxDEV(CFormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                htmlFor: \"company\",\n                children: \"Region\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CInput, {\n                id: \"company\",\n                placeholder: \"Enter region name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CFormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(CLabel, {\n                htmlFor: \"vat\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CSelect, {\n                style: {\n                  color: \"black\"\n                },\n                custom: true,\n                onChange: function onChange(e) {\n                  return _this2.status = e.target.value;\n                },\n                name: \"ccmonth\",\n                id: \"ccmonth\",\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Active\",\n                  children: \"Active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Pending\",\n                  children: \"Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(CButton, {\n              color: \"secondary\",\n              onClick: function onClick() {\n                return _this2.setState({\n                  info: false\n                });\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CButton, {\n              color: \"info\",\n              children: \"Do Something\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return SettingRegion;\n}(Component);\n\nexport default SettingRegion;","map":{"version":3,"sources":["/home/npm/Downloads/temp/src/views/SettingRegion.js"],"names":["React","Component","CBadge","CCard","CCardBody","CCardHeader","CCol","CDataTable","CModal","CModalBody","CModalFooter","CModalHeader","CModalTitle","CFormGroup","CInput","CLabel","CSelect","CButton","CRow","usersData","Link","getBadge","status","fields","SettingRegion","props","state","info","float","setState","item","color","e","target","value"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {\n    CBadge,\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CDataTable,\n    CModal,\n    CModalBody,\n    CModalFooter,\n    CModalHeader,\n    CModalTitle,\n    CFormGroup,\n    CInput,\n    CLabel,\n    CSelect,\n    CButton,\n    CRow\n  } from '@coreui/react'  \n  import usersData from './users/UsersData'\nimport { Link } from 'react-router-dom';\n  \n  const getBadge = status => {\n    switch (status) {\n      case 'Active': return'success';\n      case 'Inactive': return 'secondary'\n      case 'Pending': return 'warning'\n      case 'Banned': return 'danger'\n      default: return 'primary'\n    }\n  }\n  const fields = ['vacancy_name','registered', 'role', 'Action']\nclass SettingRegion extends Component {\n    state = {\n        info:false\n    }\n    constructor(props) {\n        super(props);\n      \n    }\n    render() { \n        return (\n            <CRow>\n            <CCol>\n              <CCard>\n                <CCardHeader>\n                  Combined All Table\n                  <div style={{float:'right'}}>\n                  <CButton className=\"btn btn-info btn-block btn-pill\" onClick={() => this.setState({info:true})}>Add Region</CButton>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                <CDataTable\n                  items={usersData}\n                  fields={fields}\n                  hover\n                  striped\n                  bordered\n                  size=\"sm\"\n                  itemsPerPage={10}\n                  pagination\n                  scopedSlots = {{\n                    'Action':\n                      (item)=>(\n                        <td>\n                          <CBadge\n                            color={getBadge(item.status)}>\n                            {item.status}\n                          </CBadge>\n                        </td>\n                      )\n                  }}\n                />\n                </CCardBody>\n              </CCard>\n            </CCol>\n            <CModal \n              show={this.state.info} \n              onClick={() => this.setState({info:false})}\n              color=\"info\"\n            >\n              <CModalHeader closeButton>\n                <CModalTitle>Modal title</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n              <CFormGroup>\n                <CLabel htmlFor=\"company\">Region</CLabel>\n                <CInput id=\"company\" placeholder=\"Enter region name\" />\n              </CFormGroup>\n              <CFormGroup>\n                <CLabel htmlFor=\"vat\">Status</CLabel>\n                <CSelect style={{color:\"black\"}} custom onChange={(e=>this.status=e.target.value)} name=\"ccmonth\" id=\"ccmonth\" required>\n                      <option value=\"Active\">Active</option>\n                      <option value=\"Pending\">Pending</option>\n                    </CSelect>\n              </CFormGroup>\n             \n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"secondary\" onClick={() => this.setState({info:false})}>Cancel</CButton>\n                <CButton color=\"info\">Do Something</CButton>{' '}\n              </CModalFooter>\n            </CModal>\n          </CRow>\n        );\n    }\n}\n \nexport default SettingRegion;"]},"metadata":{},"sourceType":"module"}